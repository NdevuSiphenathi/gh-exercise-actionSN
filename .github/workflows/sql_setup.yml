# This is the name of the workflow that will appear in the GitHub Actions interface.
name: Setup SQL Server Database

# Trigger the workflow whenever code is pushed to the main branch.
on:
  push:
    branches:
      - main

# Define the jobs for this workflow.
jobs:
  # The job will run on the latest version of Ubuntu.
  setup-database:
    runs-on: ubuntu-latest

    # Steps that make up the job.
    steps:
      # Step 1: Checkout the code from the repository so that we can work with it.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install Microsoft SQL Server
      - name: Install SQL Server
        run: |
          sudo curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-server.list
          sudo apt-get update
          sudo apt-get install -y mssql-server

      # Step 3: Start SQL Server
      - name: Start SQL Server
        run: |
          sudo systemctl start mssql-server
          sudo systemctl status mssql-server

      # Step 4: Install the SQLCMD command-line tool
      - name: Install SQLCMD
        run: |
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      # Step 5: Create the database and table
      - name: Create Database and Table
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{ secrets.SQL_SERVER_PASSWORD }} -Q "CREATE DATABASE AutoTest;"
          /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{ secrets.SQL_SERVER_PASSWORD }} -d AutoTest -Q "CREATE TABLE user (Name NVARCHAR(50), Surname NVARCHAR(50), Email NVARCHAR(100));"

      # Step 6: Install Zrok properly
      - name: Install Zrok
        run: |
          curl -sLO https://github.com/openziti/zrok/releases/latest/download/zrok-linux-amd64
          chmod +x zrok-linux-amd64
          sudo mv zrok-linux-amd64 /usr/local/bin/zrok
          ls -lah /usr/local/bin/zrok  # Verify file existence
          file /usr/local/bin/zrok      # Check file type

      # Step 7: Verify Zrok execution
      - name: Test Zrok Execution
        run: |
          zrok version || echo "❌ Zrok is not executing!"

      # Step 8: Authenticate Zrok using your API token
      - name: Authenticate Zrok
        run: |
          zrok enable ${{ secrets.ZROK_AUTH_TOKEN }} || echo "❌ Zrok enable failed!"

      # Step 9: Expose SQL Server with Zrok
      - name: Expose SQL Server with Zrok
        run: |
          zrok share public tcp:1433 > zrok_output.txt
          cat zrok_output.txt  # Display the Zrok public URL in the logs.
