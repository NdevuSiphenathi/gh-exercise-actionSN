# This is the name of the workflow that will appear in the GitHub Actions interface.
name: Setup SQL Server Database

# Trigger the workflow whenever code is pushed to the main branch.
on:
  push:
    branches:
      - main

# Define the jobs for this workflow.
jobs:
  setup-database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Start SQL Server in Docker
      - name: Start SQL Server in Docker
        run: |
          docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=${{ secrets.SQL_SERVER_PASSWORD }}' \
            -p 1433:1433 --name sqlserver -d mcr.microsoft.com/mssql/server:2022-latest

      # Wait for SQL Server to be ready
      - name: Wait for SQL Server to start
        run: |
          echo "Waiting for SQL Server to start..."
          sleep 20

      # Install SQLCMD inside the container as root
      - name: Install SQLCMD inside the container
        run: |
          docker exec -u 0 sqlserver /bin/bash -c "apt-get update && apt-get install -y mssql-tools unixodbc-dev"

      # Create Database and Table
      - name: Create Database and Table
        run: |
          docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -Q "CREATE DATABASE AutoTest;"
          docker exec sqlserver /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${{ secrets.SQL_SERVER_PASSWORD }}" -d AutoTest -Q "CREATE TABLE users (Name NVARCHAR(50), Surname NVARCHAR(50), Email NVARCHAR(100));"

      # Install Zrok Manually
      - name: Install Zrok
        run: |
          curl -sLO https://github.com/openziti/zrok/releases/latest/download/zrok-linux-amd64
          chmod +x zrok-linux-amd64
          sudo mv zrok-linux-amd64 /usr/local/bin/zrok
          which zrok || echo "❌ Zrok installation failed!"

      # Verify Zrok Installation
      - name: Check Zrok Installation
        run: |
          if ! command -v zrok &> /dev/null; then
            echo "❌ Zrok installation failed!"
            exit 1
          else
            echo "✅ Zrok installed successfully!"
          fi

      # Authenticate Zrok
      - name: Authenticate Zrok
        run: |
          zrok enable ${{ secrets.ZROK_AUTH_TOKEN }}

      # Expose SQL Server with Zrok
      - name: Expose SQL Server with Zrok
        run: |
          zrok share public tcp:1433 > zrok_output.txt
          cat zrok_output.txt
